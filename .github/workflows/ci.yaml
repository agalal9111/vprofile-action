name: CI/CD
env:
  SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  SONAR_PROJECT_KEY: ${{secrets.SONAR_PROJECT_KEY}}
  SONAR_ORGANIZATION: ${{secrets.SONAR_ORGANIZATION}}
  AWS_REGION: us-east-1
  EKS_CLUSTER: gitops-eks
  ECR_REPOSITORY: vprofile

on: workflow_dispatch
jobs:
    Testing:
        runs-on: ubuntu-latest
        steps:
            - name: checkout code
              uses: actions/checkout@v4

            - name: Unit Test
              run: mvn test
              
            - name: checkstyle
              run: mvn checkstyle:checkstyle

            - name: Setup java
              uses: actions/setup-java@v3
              with:
                distribution: 'temurin'
                java-version: '11'

            - name: Setup Sonar
              uses: warchant/setup-sonar-scanner@v7

            - name: SonarQube Scan
              run: sonar-scanner
               -Dsonar.host.url=${{ secrets.SONAR_URL }}
               -Dsonar.login=${{ secrets.SONAR_TOKEN }}
               -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
               -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
               -Dsonar.sources=src/
               -Dsonar.junit.reportsPath=target/surefire-reports/ 
               -Dsonar.jacoco.reportsPath=target/jacoco.exec 
               -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
               -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/  

            # # Check the Quality Gate status.
            # - name: SonarQube Quality Gate check
            #   id: sonarqube-quality-gate-check
            #   uses: sonarsource/sonarqube-quality-gate-action@master
            #   timeout-minutes: 5
            #   env:
            #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            #     SONAR_HOST_URL: ${{ secrets.SONAR_URL }} #OPTIONAL
      


 
              
              
          